# Generated by Django 4.2.10 on 2024-04-13 21:35

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ccode', models.CharField(max_length=200, unique=True)),
                ('enabled', models.BooleanField(default=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('branchs', models.ManyToManyField(blank=True, help_text='Branch access rights', related_name='branchs', to='base.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_company', models.CharField(blank=True, max_length=200, null=True)),
                ('contact', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('referby', models.CharField(blank=True, max_length=200, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
                ('createdby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_createdby', to=settings.AUTH_USER_MODEL)),
                ('sales', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('soldout', 'Sold out'), ('outofstock', 'Out of stock'), ('reserved', 'Reserved'), ('pending', 'Pending')], default='active', max_length=200)),
                ('price', models.FloatField(default=0.0)),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=50, null=True)),
                ('manufacturing_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.category')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=200)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('quotation_date', models.DateTimeField(auto_now_add=True)),
                ('quotation_status', models.CharField(choices=[('free', 'Free, when a quote is created'), ('approved', 'Approved, when the quote is approved internally. The quote can be printed and sent to the customer'), ('printed', 'Printed, When a quote is printed as an external document and sent to a customer for review.'), ('negotiating', 'Indicates that the negotiations about the selected quote are in progress. This status must be set manually'), ('accepted', 'Accepted, after the customer accepts the quote.'), ('rejected', 'Rejected, indicates that the proposed Quote has been rejected by the customer'), ('processed', 'Processed, after the customer accepts the proposal, use the option Process in the appropriate menu to create a maintenance sales order from the quote data.'), ('canceled', 'Canceled, indicates that the quote is cancelled. Only the quotes with the status Free, Printed or Negotiating can be cancelled'), ('lost', 'Lost, indicates that the customer has selected another supplier. This status must be set manually.')], default='free', max_length=200)),
                ('customer_company', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_contact', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=200, null=True)),
                ('customer_email', models.EmailField(max_length=254)),
                ('sales', models.CharField(blank=True, max_length=200, null=True)),
                ('confirm_date', models.DateTimeField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('terms', models.CharField(blank=True, max_length=200, null=True)),
                ('total', models.FloatField(default=0.0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
                ('confirm_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirm_by', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.CharField(max_length=200)),
                ('supplier_company', models.CharField(max_length=200)),
                ('website', models.CharField(max_length=200)),
                ('address', models.TextField(blank=True, default='', null=True)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
            ],
        ),
        migrations.CreateModel(
            name='Quotation_item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.FloatField(default=0.0)),
                ('sub_total', models.FloatField(default=0.0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.product')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.quotation')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.product_type'),
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.supplier'),
        ),
        migrations.CreateModel(
            name='MemberItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('des', models.CharField(blank=True, max_length=200, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('discount_price', models.FloatField(default=0.0)),
                ('member_points', models.IntegerField(default=0)),
                ('qty', models.IntegerField(default=0)),
                ('total_qty', models.IntegerField(default=0)),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('soldout', 'Sold out'), ('outofstock', 'Out of stock'), ('reserved', 'Reserved'), ('pending', 'Pending')], default='active', max_length=50)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.product')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('min_quantity', models.IntegerField()),
                ('max_quantity', models.IntegerField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('soldout', 'Sold out'), ('outofstock', 'Out of stock'), ('reserved', 'Reserved'), ('pending', 'Pending')], default='active', max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.branch')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.product')),
            ],
        ),
        migrations.CreateModel(
            name='CRMAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('member_enabled', models.BooleanField(default=True)),
                ('membernumber_next', models.IntegerField(default=1)),
                ('membernumber_digit', models.IntegerField(default=3, help_text='Member number digit, e.g. 3 is 001, 4 is 0001')),
                ('membernumber_reset', models.CharField(blank=True, help_text='Rules for reset member number, e.g. rules:&lt;Y&gt;2024&lt;/Y&gt; now is 2023-12-31, when now is 2024-01-01, reset member number to 1', max_length=100, null=True, verbose_name='Reset Member Number rules')),
                ('membernumber_prefix', models.CharField(blank=True, help_text='Rules for member number, &lt;TEXT&gt;MEM&lt;/TEXT&gt;&lt;Y&gt;&lt;/Y&gt;&lt;m&gt;&lt;/m&gt;&lt;d&gt;&lt;/d&gt;&lt;H&gt;&lt;/H&gt;&lt;M&gt;&lt;/M&gt;&lt;S&gt;&lt;/S&gt;&lt;no&gt;&lt;/no&gt; is Year, Month, Day, Hour, Minute, Second, Number (%Y-%m-%d %H:%M:%S)', max_length=100, null=True)),
                ('quotation_enabled', models.BooleanField(default=True)),
                ('quotationnumber_next', models.IntegerField(default=1)),
                ('quotationnumber_digit', models.IntegerField(default=3)),
                ('quotationnumber_reset', models.CharField(blank=True, max_length=100, null=True)),
                ('quotationnumber_prefix', models.CharField(blank=True, max_length=100, null=True)),
                ('quotation_default_terms', models.TextField(blank=True, max_length=200, null=True)),
                ('quotation_default_remark', models.TextField(blank=True, max_length=200, null=True)),
                ('inventory_enabled', models.BooleanField(default=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company'),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, unique=True)),
                ('login', models.BooleanField(default=False)),
                ('number', models.CharField(max_length=200, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('verifycode', models.CharField(blank=True, max_length=200, null=True)),
                ('verifycode_date', models.DateTimeField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('enabled', models.BooleanField(default=True)),
                ('token', models.CharField(blank=True, max_length=200, null=True)),
                ('tokendate', models.DateTimeField(blank=True, null=True)),
                ('birthday', models.DateTimeField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('memberpoints', models.IntegerField(default=0)),
                ('memberpointtotal', models.IntegerField(default=0)),
                ('memberlevel', models.CharField(blank=True, max_length=10, null=True)),
                ('nickname', models.CharField(blank=True, max_length=200, null=True)),
                ('lastname', models.CharField(blank=True, max_length=200, null=True)),
                ('firstname', models.CharField(blank=True, max_length=200, null=True)),
                ('mobilephone_country', models.CharField(blank=True, max_length=200, null=True)),
                ('mobilephone', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company')),
                ('createdby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('company', 'username')},
            },
        ),
    ]
